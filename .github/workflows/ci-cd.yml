name: CI/CD

on:
  push:
    branches:
      - '*'

jobs:
  build-and-deploy:
    permissions: write-all

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Set up GCP Credentials
        if: contains(github.event.head_commit.message, '-deploy')
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project diesel-nova-412314

      - name: Install dependencies
        run: |
          for service_folder in Backend/*; do
            if [ -d "$service_folder" ] && [ "$(basename "$service_folder")" != "api-samples" ]; then
              pip install -r "$service_folder/requirements.txt"
            fi
          done

      - name: Determine Which Microservice Was Changed
        id: microservice
        run: |
          # Use git diff to get a list of files changed in the commit
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

          # Loop through the changed files and set the microservice accordingly
          for file in $changed_files; do
            case "$file" in
              "Backend/rdf-service/"*)
                echo "::set-output name=microservice::RDF Service"
                exit
                ;;
              "Backend/recommendation-service/"*)
                echo "::set-output name=microservice::Recommendation Service"
                exit
                ;;
              "Backend/user-profile-service/"*)
                echo "::set-output name=microservice::User Profile Service"
                exit
                ;;
              # Add more cases for other microservices as needed
            esac
          done

          # If no specific microservice is found, set a default value
          echo "::set-output name=microservice::Unknown Microservice"

      - name: Run Unit Tests
        run: |
          # Use the microservice information to determine which tests to run
          microservice_name=$(echo "${{ steps.microservice.outputs.microservice }}")
          for service_folder in Backend/*; do
            if [ -d "$service_folder/test" ] && [ "$(basename "$service_folder")" == "$microservice_name" ]; then
              report_dir="test-reports/$microservice_name"
              mkdir -p "$report_dir"
              echo "Running tests in $service_folder"
              python -m xmlrunner discover -s "$service_folder/test" -o "$report_dir" -v
            fi
          done

      - name: Upload Test Reports
        uses: actions/upload-artifact@v2
        with:
          name: Test Reports
          path: test-reports

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test-reports/*.xml
          check_name: ${{ steps.microservice.outputs.microservice }} Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Microservice
        if: contains(github.event.head_commit.message, '-deploy') && steps.microservice.outputs.microservice != 'Unknown Microservice'
        run: |
          microservice_name=$(echo "${{ steps.microservice.outputs.microservice }}")
          gcloud app deploy "Backend/${microservice_name}/${microservice_name}.yaml" --quiet
